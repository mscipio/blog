<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Blog | Michele Scipioni (machine learning)</title><link>http://mscipio.github.io/</link><description></description><atom:link type="application/rss+xml" rel="self" href="http://mscipio.github.io/categories/machine-learning.xml"></atom:link><language>en</language><lastBuildDate>Tue, 10 May 2016 15:50:08 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Blind Source Separation (BSS) with the Shogun Machine Learning Toolbox</title><link>http://mscipio.github.io/posts/bss-shogun-python.html</link><dc:creator>Michele Scipioni</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h5 id="Strongly-inspired-by-an-article-by-Kevin-Hughes-(https://github.com/kevinhughes27?tab=repositories)"&gt;Strongly inspired by an article by Kevin Hughes (&lt;em&gt;&lt;a href="https://github.com/kevinhughes27?tab=repositories"&gt;https://github.com/kevinhughes27?tab=repositories&lt;/a&gt;&lt;/em&gt;)&lt;a class="anchor-link" href="http://mscipio.github.io/posts/bss-shogun-python.html#Strongly-inspired-by-an-article-by-Kevin-Hughes-(https://github.com/kevinhughes27?tab=repositories)"&gt;¶&lt;/a&gt;&lt;/h5&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Today I am going to show you how we can do Blind Source Separation (BSS) using algorithms available in the Shogun Machine Learning Toolbox. What is &lt;strong&gt;Blind Source Separation&lt;/strong&gt;? &lt;em&gt;BSS&lt;/em&gt; is the separation of a set of source signals from a set of mixed signals.&lt;/p&gt;
&lt;p&gt;My favorite example of this problem is known as the &lt;strong&gt;cocktail party problem&lt;/strong&gt; where a number of people are talking simultaneously and we want to separate each persons speech so we can listen to it separately. Now the caveat with this type of approach is that we need as many mixtures as we have source signals or in terms of the cocktail party problem &lt;em&gt;we need as many microphones as people talking in the room&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Let's get started. This example is going to be in Python and the first thing we are going to need to do is &lt;em&gt;load some audio files&lt;/em&gt;. To make things a bit easier further on in this example I'm going to wrap the basic scipy wav file reader and add some additional functionality. First I added a case to handle converting stereo wav files back into mono wav files and secondly this loader takes a desired sample rate and resamples the input to match. This is important because when we mix the two audio signals they need to have the same sample rate. &lt;/p&gt;&lt;p&gt;&lt;a href="http://mscipio.github.io/posts/bss-shogun-python.html"&gt;Read more…&lt;/a&gt; (11 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>bss</category><category>machine learning</category><category>python</category><category>shogun</category><guid>http://mscipio.github.io/posts/bss-shogun-python.html</guid><pubDate>Tue, 10 May 2016 08:55:00 GMT</pubDate></item></channel></rss>