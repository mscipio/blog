<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Blog | Michele Scipioni (optimization)</title><link>http://mscipio.github.io/</link><description></description><atom:link type="application/rss+xml" rel="self" href="http://mscipio.github.io/categories/optimization.xml"></atom:link><language>en</language><lastBuildDate>Wed, 11 May 2016 08:59:34 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Simple nonlinear least squares curve fitting in Python</title><link>http://mscipio.github.io/posts/Python_nonlinear_least_squares.html</link><dc:creator>Michele Scipioni</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="The-problem"&gt;The problem&lt;a class="anchor-link" href="http://mscipio.github.io/posts/Python_nonlinear_least_squares.html#The-problem"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Todoay we are going to test a very simple example of nonlinear least square curve fitting using the &lt;em&gt;scipy.optimize&lt;/em&gt; module.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In [1]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="k"&gt;matplotlib&lt;/span&gt; inline
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;scipy.optimize&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="n"&gt;curve_fit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="Create-data"&gt;Create data&lt;a class="anchor-link" href="http://mscipio.github.io/posts/Python_nonlinear_least_squares.html#Create-data"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Let's assume we have the following points &lt;em&gt;[xdata, ydata]&lt;/em&gt; and that we want to fit these data with the following model function using nonlinear least squares:&lt;/p&gt;
&lt;p&gt;$F(p_1,p_2,x) = p_1\cos(p_2x) + p_2\sin(p_1x)$&lt;/p&gt;
&lt;p&gt;For now, we are primarily interested in the following results:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;strong&gt;fit parameters&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Sum of squared &lt;strong&gt;residuals&lt;/strong&gt;&lt;p&gt;&lt;a href="http://mscipio.github.io/posts/Python_nonlinear_least_squares.html"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>curve fitting</category><category>optimization</category><category>python</category><category>scipy</category><guid>http://mscipio.github.io/posts/Python_nonlinear_least_squares.html</guid><pubDate>Wed, 11 May 2016 08:57:00 GMT</pubDate></item><item><title>Fitting theoretical model to data in python</title><link>http://mscipio.github.io/posts/fitting-functions-to-data.html</link><dc:creator>Michele Scipioni</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Fitting-Functions-to-Data"&gt;Fitting Functions to Data&lt;a class="anchor-link" href="http://mscipio.github.io/posts/fitting-functions-to-data.html#Fitting-Functions-to-Data"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;There are several data fitting utilities available. We will focus on two:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scipy.optimize&lt;/li&gt;
&lt;li&gt;lmfit.minimize&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Using both those modules, you can fit any arbitrary function that you define and it is, also, possible to constrain given parameters during the fit. Another important aspect is that both packages come with useful
diagnostic tools.&lt;/p&gt;
&lt;h3 id="Fitting-Basics"&gt;Fitting Basics&lt;a class="anchor-link" href="http://mscipio.github.io/posts/fitting-functions-to-data.html#Fitting-Basics"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The &lt;em&gt;fitting&lt;/em&gt; we discuss here is an iterative process.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First, we define our &lt;strong&gt;desired function&lt;/strong&gt;, and calculate values given certain parameters&lt;/li&gt;
&lt;li&gt;Then we &lt;strong&gt;calculate the difference&lt;/strong&gt; between the initial and the new values&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The final aim is to minimize this difference (specifically, we generally minimize the sum of the squares of these differences).&lt;/p&gt;&lt;p&gt;&lt;a href="http://mscipio.github.io/posts/fitting-functions-to-data.html"&gt;Read more…&lt;/a&gt; (6 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>least squares</category><category>lmfit</category><category>optimization</category><category>python</category><category>scipy</category><guid>http://mscipio.github.io/posts/fitting-functions-to-data.html</guid><pubDate>Tue, 10 May 2016 15:45:00 GMT</pubDate></item></channel></rss>